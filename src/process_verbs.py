#!/usr/bin/env python3
import re

from config import Directories
from file_utils import open_file_dir_safe


def parse_line(line):
    """
    Parse verb in a line.
    Inspired by https://stackoverflow.com/a/27415226/2223873
    :param line: line to parse
    :return: parsed verb
    """
    match = re.match(
        """^[0-9]{8}\s[0-9]{2}\s[a-z]\s[0-9]{2}\s([a-zA-Z]*)\s""",
        line
    )
    if match:
        return match.group(1)
    else:
        return None


def process_verbs():
    """
    Read verbs from a WordNet dictionary, parse it and save.
    """
    input_file = open(f"{Directories.raw_data}/verbs.txt")
    output_file = \
        open_file_dir_safe(f"{Directories.processed_data}/infinitive.txt", 'w')

    with input_file, output_file:
        for line in input_file:
            word = parse_line(line)
            if word and word != "initial":  # "initial" is rarely used as a verb
                output_file.write(word + "\n")

        additional = [
            "sync",
            "shut",
            # "merge" is also missing but it probably shouldn't be included
            # because messages with "merge" are often auto-generated by Git
        ]

        for word in additional:
            output_file.write(word + "\n")
